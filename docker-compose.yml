version: "3.3"

x-common-networks: &common-networks
  networks:
    - d-gui-network

x-common-extra-hosts: &extra-hosts
  # use host.docker.internal to access the host machine from within the container
  extra_hosts:
    - "host.docker.internal:host-gateway"

services:
  backend:
    <<: [*common-networks, *extra-hosts]
    build:
      context: .
      dockerfile: ./Dockerfile
    image: d-gui-manager-web
    container_name: d-gui-manager-web
    entrypoint: /src/docker-entrypoint.sh
    volumes:
      - ./src:/src
      - ./supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
    labels:
      - "traefik.enable=true"
      # Define router for /login
      - "traefik.http.routers.backend-login.rule=PathPrefix(`/login`)"
      - "traefik.http.routers.backend-login.service=backend-service"
      # Define router for /dashboard
      - "traefik.http.routers.backend-dashboard.rule=PathPrefix(`/dashboard`)"
      - "traefik.http.routers.backend-dashboard.service=backend-service"
      # Define router for /api
      - "traefik.http.routers.backend-api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api.service=backend-service"
      # Define router for /socket.io
      - "traefik.http.routers.backend-websocket.rule=PathPrefix(`/socket.io`)"
      - "traefik.http.routers.backend-websocket.service=backend-service"
      # Define the service
      - "traefik.http.services.backend-service.loadbalancer.server.port=8000"

  redis:
    <<: [*common-networks]
    image: redis:alpine
    container_name: d-gui-manager-redis

  nvidia-cuda:
    # for testing with GPU support
    image: nvidia/cuda:11.0.3-base-ubuntu20.04
    container_name: d-gui-cuda
    entrypoint: ["echo", "CUDA image ready"]

  traefik:
    <<: [*common-networks]
    image: traefik:v3.0
    container_name: d-gui-proxy
    command:
      - --providers.docker
      - --entrypoints.web.address=:80
      - --api.dashboard=true
      - --api.insecure
      - --serverstransport.insecureskipverify=true
    ports:
      - "80:80"
      - "8080:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  d-gui-network:
    external: true

